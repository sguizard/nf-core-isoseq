{
    "$schema": "https://json-schema.org/draft/2020-12/schema",
    "$id": "https://raw.githubusercontent.com/nf-core/isoseq/master/assets/schema_input.json",
    "title": "nf-core/isoseq pipeline - params.input schema",
    "description": "Schema for the file provided with params.input",
    "type": "array",
    "items": {
        "type": "object",
        "properties": {
            "sample": {
                "type": "string",
                "pattern": "^\\S+$",
                "errorMessage": "Sample name must be provided and cannot contain spaces",
                "meta": ["id"]
            },
            "bam_type": {
                "anyOf": [
                    {
                        "type": "string",
                        "pattern": "^subreads|ccs$",
                        "format": "file-path"
                    },
                    {
                        "type": "string",
                        "maxLength": 0
                    }
                ],
                "errorMessage": "BAM type should be either 'subreads' or 'ccs'. If missing, it is assumed to be 'subreads'",
                "meta": ["bam_type"]
            },
            "bam": {
                "type": "string",
                "pattern": "(^\\S+\\.bam$|^None$)",
                "errorMessage": "Subreads/CCS BAM file must be provided, cannot contain spaces and must have extension '.bam' or being 'None' if the entrypoint is 'map'"
            },
            "pbi": {
                "type": "string",
                "pattern": "(^\\S+\\.bam\\.pbi$|^None$)",
                "errorMessage": "PacBio Index file for BAM subreads cannot contain spaces and must have extension '.bam.pbi' or being 'None' if the entrypoint is 'map' or if the BAM file is CCS"
            },
            "reads": {
                "type": "string",
                "pattern": "(^\\S+\\.fa\\.gz$|^None$)",
                "errorMessage": "Long reads file cannot contain spaces and must have extension '.bam.pbi' or being 'None' if the entrypoint is 'isoseq'"
            }
        },
        "required": ["sample"],
        "dependentRequired": {
            "bam_type": ["bam"]
        }
    }
}

nextflow_pipeline {

    name "Test pipeline"
    script "../main.nf"
    tag "pipeline"
    tag "pipeline_isoseq"

    test("-profile test_minimap2_map_entrypoint") {

        when {
            params {
                outdir          = "$outputDir"
                input           = params.pipelines_testdata_base_path + 'samplesheet_map_entrypoint.csv'
                primers         = params.pipelines_testdata_base_path + 'testdata/primers.fasta'
                fasta           = params.pipelines_testdata_base_path + 'reference/Homo_sapiens.GRCh38.dna.chromosome.19.fasta'
                chunk           = 100
                five_prime      = 100
                splice_junction = 10
                three_prime     = 100
                capped          = true
                aligner         = 'minimap2'
                entrypoint      = 'map'
            }
        }

        then {
            // stable_name: All files + folders in ${params.outdir}/ with a stable name
            def stable_name = getAllFilesFromDir(params.outdir, relative: true, includeDir: true, ignore: ['pipeline_info/*.{html,json,txt}'])
            // stable_path: All files in ${params.outdir}/ with stable content
            def stable_path = getAllFilesFromDir(params.outdir, ignoreFile: 'tests/.nftignore')
            assertAll(
                { assert workflow.success},
                { assert snapshot(
                    // pipeline versions.yml file for multiqc from which Nextflow version is removed because we test pipelines on multiple Nextflow versions
                    removeNextflowVersion("$outputDir/pipeline_info/nf_core_isoseq_software_mqc_versions.yml"),
                    // All stable path name, with a relative path
                    stable_name,
                    // All files with stable contents
                    stable_path
                ).match() }
            )
        }
    }
}

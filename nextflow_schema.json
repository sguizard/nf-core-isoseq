{
    "$schema": "https://json-schema.org/draft/2020-12/schema",
    "$id": "https://raw.githubusercontent.com/nf-core/isoseq/master/nextflow_schema.json",
    "title": "nf-core/isoseq pipeline parameters",
    "description": "Genes and transcripts annotation with Isoseq using uLTRA and TAMA",
    "type": "object",
    "$defs": {
        "input_output_options": {
            "title": "Input/output options",
            "type": "object",
            "fa_icon": "fas fa-terminal",
            "description": "Define where the pipeline should find input data and save output data.",
            "required": ["input", "outdir", "primers"],
            "properties": {
                "input": {
                    "type": "string",
                    "format": "file-path",
                    "exists": true,
                    "schema": "assets/schema_input.json",
                    "mimetype": "text/csv",
                    "pattern": "^\\S+\\.csv$",
                    "description": "Path to comma-separated file containing information about the samples in the experiment.",
                    "help_text": "You will need to create a design file with information about the samples in your experiment before running the pipeline. Use this parameter to specify its location. It has to be a comma-separated file with 3 columns, and a header row. See [usage docs](https://nf-co.re/isoseq/usage#samplesheet-input).",
                    "fa_icon": "fas fa-file-csv"
                },
                "outdir": {
                    "type": "string",
                    "format": "directory-path",
                    "description": "The output directory where the results will be saved. You have to use absolute paths to storage on Cloud infrastructure.",
                    "fa_icon": "fas fa-folder-open"
                },
                "primers": {
                    "type": "string",
                    "fa_icon": "fas fa-grip-lines",
                    "description": "Fasta file of primers sequences",
                    "help_text": "The provided file must contains all primers sequences used for sequencing. \nGziped files are accepted. "
                },
                "gtf": {
                    "type": "string",
                    "fa_icon": "fas fa-stream",
                    "description": "Genome annotation file",
                    "help_text": "Provide a GTF annotation file (sorted by sequence and start) if you set the `--aligner` option to `uLTRA`\nGziped files are accepted. "
                },
                "entrypoint": {
                    "type": "string",
                    "fa_icon": "fas fa-dungeon",
                    "description": "Run complete pipeline or TAMA only?",
                    "enum": ["isoseq", "map"],
                    "default": "isoseq",
                    "help_text": "If you don't have the subreads sequences, because of the provider or last PacBio sequencer or because you used Oxford Nanopore, you'll to run the pipeline from the mapping step to advantage of the TAMA processing. \nThis option allows you to change the entry point from subread (--entrypoint isoseq) processing to mapping (--entrypoint map). "
                },
                "chunk": {
                    "type": "integer",
                    "default": 40,
                    "description": "If entrypoint 'isoseq', ccs --chunk option, define the number of batches to run in parallel. If entrypoint 'map', split fasta in files of 'chunk' sequences.",
                    "help_text": "If selected entrypoint is 'isoseq' (default): \nCCS workload can be split into to chunks for a faster running time. \nThis value must be a positive integer greater than 1. \n```bash\n--chunk 1/10 \n```\n\nif selected entrypoint is 'map': the reads files will be split into files of 'chunk' sequences.",
                    "fa_icon": "fas fa-cog"
                },
                "email": {
                    "type": "string",
                    "description": "Email address for completion summary.",
                    "fa_icon": "fas fa-envelope",
                    "help_text": "Set this parameter to your e-mail address to get a summary e-mail with details of the run sent to you when the workflow exits. If set in your user config file (`~/.nextflow/config`) then you don't need to specify this on the command line for every run.",
                    "pattern": "^([a-zA-Z0-9_\\-\\.]+)@([a-zA-Z0-9_\\-\\.]+)\\.([a-zA-Z]{2,5})$"
                },
                "multiqc_title": {
                    "type": "string",
                    "description": "MultiQC report title. Printed as page header, used for filename if not otherwise specified.",
                    "fa_icon": "fas fa-file-signature"
                }
            }
        },
        "ccs_options": {
            "title": "CCS options",
            "type": "object",
            "description": "Use these options to set CCS parameters",
            "default": "",
            "properties": {
                "rq": {
                    "type": "number",
                    "default": 0.9,
                    "description": "ccs --rq option, define the minimum read quality for CCS selection",
                    "help_text": "Minimum read quality for a consensus. \nUnder this threshold the sequence is discarded. \nThis value must be in range [0-1]. \n```bash\n--rq 0.9\n```",
                    "fa_icon": "fas fa-cog"
                },
                "min_passes": {
                    "type": "integer",
                    "default": 3,
                    "description": "ccs --min-passes option, define the minimum number of passes to select a CCS",
                    "help_text": "Minimum number of full-length subreads required to generate CCS for a ZMW.",
                    "fa_icon": "fas fa-cog"
                },
                "min_snr": {
                    "type": "number",
                    "default": 2.5,
                    "description": "ccs --min-snr option, minimum SNR of subreads to use for generating CCS",
                    "help_text": "Minimum SNR of subreads to use for generating CCS",
                    "fa_icon": "fas fa-cog"
                },
                "min_length": {
                    "type": "integer",
                    "default": 10,
                    "description": "ccs --min-length option, minimum CCS length for CCS selection",
                    "help_text": "Minimum draft length before polishing",
                    "fa_icon": "fas fa-cog"
                },
                "max_length": {
                    "type": "integer",
                    "default": 50000,
                    "description": "ccs --max-length option, maximum CCS length for CCS selection",
                    "help_text": "Maximum draft length before polishing",
                    "fa_icon": "fas fa-cog"
                },
                "top_passes": {
                    "type": "integer",
                    "default": 60,
                    "description": "ccs --top-passes option, maximum number of passes to use for CCS generation",
                    "help_text": "Pick at maximum the top N passes for each ZMW",
                    "fa_icon": "fas fa-cog"
                }
            },
            "fa_icon": "fas fa-cogs"
        },
        "aligner_option": {
            "title": "Aligner option",
            "type": "object",
            "description": "Aligner selection",
            "default": "",
            "fa_icon": "fas fa-stream",
            "properties": {
                "aligner": {
                    "type": "string",
                    "description": "Aligner to use for mapping: minimap2 or ultra",
                    "help_text": "The `uLTRA` aligner improve detection of small exons but require an annotation in GTF format to run. \nIf the genome don't have any reference annotation, you have to use `minimap2`. ",
                    "fa_icon": "fas fa-stream",
                    "enum": ["minimap2", "ultra"]
                }
            },
            "required": ["aligner"]
        },
        "tama_options": {
            "title": "TAMA options",
            "type": "object",
            "description": "Use these options to set TAMA collapse and TAMA merge parameters",
            "default": "",
            "properties": {
                "capped": {
                    "type": "boolean",
                    "description": "TAMA collapse: Capped RNA?",
                    "help_text": "Set this option if the RNAs are capped. \n```bash\n--capped\n```",
                    "fa_icon": "fas fa-graduation-cap"
                },
                "five_prime": {
                    "type": "integer",
                    "default": 100,
                    "description": "TAMA collapse: 5 prime wobble threshold",
                    "help_text": "Set the maximum threshold for collapsing 5 prime exon.\n```\n--five_prime 100\n```",
                    "fa_icon": "fas fa-cog"
                },
                "splice_junction": {
                    "type": "integer",
                    "default": 10,
                    "description": "TAMA collapse: Splice junction / exon wobble threshold",
                    "help_text": "Set the maximum threshold for collapsing spliced exons.\n```\n--splice_junction 10\n```",
                    "fa_icon": "fas fa-cog"
                },
                "three_prime": {
                    "type": "integer",
                    "default": 100,
                    "description": "TAMA collapse: 3 prime wobble threshold",
                    "help_text": "Set the maximum threshold for collapsing 3 prime exon.\n```\n--three_prime 100\n```",
                    "fa_icon": "fas fa-cog"
                },
                "tama_merge_all": {
                    "type": "boolean",
                    "fa_icon": "fas fa-question-circle",
                    "description": "TAMA merge: merge the sample-wise annotations into a single annotation?"
                }
            },
            "fa_icon": "fas fa-cogs"
        },
        "process_skipping_options": {
            "title": "Process skipping options",
            "type": "object",
            "description": "Options to skip various steps within the workflow.",
            "default": "",
            "fa_icon": "fas fa-fast-forward",
            "properties": {
                "skip_lima": {
                    "type": "boolean",
                    "fa_icon": "fas fa-forward",
                    "description": "Skip lima"
                }
            }
        },
        "reference_genome_options": {
            "title": "Reference genome options",
            "type": "object",
            "fa_icon": "fas fa-dna",
            "description": "Reference genome related files and options required for the workflow.",
            "properties": {
                "genome": {
                    "type": "string",
                    "description": "Name of iGenomes reference.",
                    "fa_icon": "fas fa-book",
                    "help_text": "If using a reference genome configured in the pipeline using iGenomes, use this parameter to give the ID for the reference. This is then used to build the full paths for all required reference genome files e.g. `--genome GRCh38`. \n\nSee the [nf-core website docs](https://nf-co.re/usage/reference_genomes) for more details."
                },
                "fasta": {
                    "type": "string",
                    "format": "file-path",
                    "exists": true,
                    "mimetype": "text/plain",
                    "pattern": "^\\S+\\.fn?a(sta)?(\\.gz)?$",
                    "description": "Path to FASTA genome file.",
                    "help_text": "This parameter is *mandatory* if `--genome` is not specified. If you don't have a BWA index available this will be generated for you automatically. Combine with `--save_reference` to save BWA index for future runs. Gziped files are accepted. ",
                    "fa_icon": "far fa-file-code"
                },
                "igenomes_ignore": {
                    "type": "boolean",
                    "description": "Do not load the iGenomes reference config.",
                    "fa_icon": "fas fa-ban",
                    "hidden": true,
                    "help_text": "Do not load `igenomes.config` when running the pipeline. You may choose this option if you observe clashes between custom parameters and those supplied in `igenomes.config`."
                },
                "igenomes_base": {
                    "type": "string",
                    "format": "directory-path",
                    "description": "The base path to the igenomes reference files",
                    "fa_icon": "fas fa-ban",
                    "hidden": true,
                    "default": "s3://ngi-igenomes/igenomes/"
                }
            }
        },
        "institutional_config_options": {
            "title": "Institutional config options",
            "type": "object",
            "fa_icon": "fas fa-university",
            "description": "Parameters used to describe centralised config profiles. These should not be edited.",
            "help_text": "The centralised nf-core configuration profiles use a handful of pipeline parameters to describe themselves. This information is then printed to the Nextflow log when you run a pipeline. You should not need to change these values when you run a pipeline.",
            "properties": {
                "custom_config_version": {
                    "type": "string",
                    "description": "Git commit id for Institutional configs.",
                    "default": "master",
                    "hidden": true,
                    "fa_icon": "fas fa-users-cog"
                },
                "custom_config_base": {
                    "type": "string",
                    "description": "Base directory for Institutional configs.",
                    "default": "https://raw.githubusercontent.com/nf-core/configs/master",
                    "hidden": true,
                    "help_text": "If you're running offline, Nextflow will not be able to fetch the institutional config files from the internet. If you don't need them, then this is not a problem. If you do need them, you should download the files from the repo and tell Nextflow where to find them with this parameter.",
                    "fa_icon": "fas fa-users-cog"
                },
                "config_profile_name": {
                    "type": "string",
                    "description": "Institutional config name.",
                    "hidden": true,
                    "fa_icon": "fas fa-users-cog"
                },
                "config_profile_description": {
                    "type": "string",
                    "description": "Institutional config description.",
                    "hidden": true,
                    "fa_icon": "fas fa-users-cog"
                },
                "config_profile_contact": {
                    "type": "string",
                    "description": "Institutional config contact information.",
                    "hidden": true,
                    "fa_icon": "fas fa-users-cog"
                },
                "config_profile_url": {
                    "type": "string",
                    "description": "Institutional config URL link.",
                    "hidden": true,
                    "fa_icon": "fas fa-users-cog"
                }
            }
        },
        "generic_options": {
            "title": "Generic options",
            "type": "object",
            "fa_icon": "fas fa-file-import",
            "description": "Less common options for the pipeline, typically set in a config file.",
            "help_text": "These options are common to all nf-core pipelines and allow you to customise some of the core preferences for how the pipeline runs.\n\nTypically these options would be set in a Nextflow config file loaded for all pipeline runs, such as `~/.nextflow/config`.",
            "properties": {
                "version": {
                    "type": "boolean",
                    "description": "Display version and exit.",
                    "fa_icon": "fas fa-question-circle",
                    "hidden": true
                },
                "publish_dir_mode": {
                    "type": "string",
                    "default": "copy",
                    "description": "Method used to save pipeline results to output directory.",
                    "help_text": "The Nextflow `publishDir` option specifies which intermediate files should be saved to the output directory. This option tells the pipeline what method should be used to move these files. See [Nextflow docs](https://www.nextflow.io/docs/latest/process.html#publishdir) for details.",
                    "fa_icon": "fas fa-copy",
                    "enum": ["symlink", "rellink", "link", "copy", "copyNoFollow", "move"],
                    "hidden": true
                },
                "email_on_fail": {
                    "type": "string",
                    "description": "Email address for completion summary, only when pipeline fails.",
                    "fa_icon": "fas fa-exclamation-triangle",
                    "pattern": "^([a-zA-Z0-9_\\-\\.]+)@([a-zA-Z0-9_\\-\\.]+)\\.([a-zA-Z]{2,5})$",
                    "help_text": "An email address to send a summary email to when the pipeline is completed - ONLY sent if the pipeline does not exit successfully.",
                    "hidden": true
                },
                "plaintext_email": {
                    "type": "boolean",
                    "description": "Send plain-text email instead of HTML.",
                    "fa_icon": "fas fa-remove-format",
                    "hidden": true
                },
                "max_multiqc_email_size": {
                    "type": "string",
                    "description": "File size limit when attaching MultiQC reports to summary emails.",
                    "pattern": "^\\d+(\\.\\d+)?\\.?\\s*(K|M|G|T)?B$",
                    "default": "25.MB",
                    "fa_icon": "fas fa-file-upload",
                    "hidden": true
                },
                "monochrome_logs": {
                    "type": "boolean",
                    "description": "Do not use coloured log outputs.",
                    "fa_icon": "fas fa-palette",
                    "hidden": true
                },
                "hook_url": {
                    "type": "string",
                    "description": "Incoming hook URL for messaging service",
                    "fa_icon": "fas fa-people-group",
                    "help_text": "Incoming hook URL for messaging service. Currently, MS Teams and Slack are supported.",
                    "hidden": true
                },
                "multiqc_config": {
                    "type": "string",
                    "format": "file-path",
                    "description": "Custom config file to supply to MultiQC.",
                    "fa_icon": "fas fa-cog",
                    "hidden": true
                },
                "multiqc_logo": {
                    "type": "string",
                    "description": "Custom logo file to supply to MultiQC. File name must also be set in the MultiQC config file",
                    "fa_icon": "fas fa-image",
                    "hidden": true
                },
                "multiqc_methods_description": {
                    "type": "string",
                    "description": "Custom MultiQC yaml file containing HTML including a methods description.",
                    "fa_icon": "fas fa-cog"
                },
                "validate_params": {
                    "type": "boolean",
                    "description": "Boolean whether to validate parameters against the schema at runtime",
                    "default": true,
                    "fa_icon": "fas fa-check-square",
                    "hidden": true
                },
                "pipelines_testdata_base_path": {
                    "type": "string",
                    "fa_icon": "far fa-check-circle",
                    "description": "Base URL or local path to location of pipeline test dataset files",
                    "default": "https://raw.githubusercontent.com/nf-core/test-datasets/",
                    "hidden": true
                },
                "trace_report_suffix": {
                    "type": "string",
                    "fa_icon": "far calendar",
                    "description": "Suffix to add to the trace report filename. Default is the date and time in the format yyyy-MM-dd_HH-mm-ss.",
                    "hidden": true
                }
            }
        }
    },
    "allOf": [
        {
            "$ref": "#/$defs/input_output_options"
        },
        {
            "$ref": "#/$defs/ccs_options"
        },
        {
            "$ref": "#/$defs/aligner_option"
        },
        {
            "$ref": "#/$defs/tama_options"
        },
        {
            "$ref": "#/$defs/process_skipping_options"
        },
        {
            "$ref": "#/$defs/reference_genome_options"
        },
        {
            "$ref": "#/$defs/institutional_config_options"
        },
        {
            "$ref": "#/$defs/generic_options"
        }
    ]
}
